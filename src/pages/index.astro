<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content="Welcome to the Ronin hacking blog: exploits, red teaming insights, and cyber missions." />
  <title>H4ckronin Red Teaming</title>
  <link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;600&display=swap" rel="stylesheet">

  <style>
    /* Global Body & Background */
    body {
      margin: 0;
      font-family: 'Fira Code', monospace;
      background: linear-gradient(135deg, #0b0b0b 0%, #1c1c1c 100%);
      color: #e6e0d6;
      position: relative;
      overflow-x: hidden;
    }

    /* Scanline overlay */
    body::before {
      content: "";
      position: fixed;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      background: repeating-linear-gradient(
        rgba(255,255,255,0.02) 0px,
        rgba(255,255,255,0.02) 1px,
        transparent 1px,
        transparent 3px
      );
      pointer-events: none;
      z-index: 10;
    }

    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      min-height: 100vh;
      padding: 2rem;
      text-align: center;
      position: relative;
      z-index: 20;
    }

    /* Glitch Heading */
    h1.glitch {
      font-size: 3rem;
      font-weight: 600;
      font-family: 'Fira Code', monospace;
      color: #e6e0d6;
      position: relative;
      text-shadow: 0 0 2px #fff5e6, 0 0 5px #fff5e6, 0 0 10px #dcd0c0;
    }
    .glitch::before,
    .glitch::after {
      content: attr(data-text);
      position: absolute;
      left: 0;
    }
    .glitch::before {
      text-shadow: 1px 0 #d3c7b0, -1px 0 #c8bda5;
      animation: glitchTop 1s infinite linear alternate-reverse;
    }
    .glitch::after {
      text-shadow: 1px 0 #c8bda5, -1px 0 #d3c7b0;
      animation: glitchBottom 1s infinite linear alternate-reverse;
    }
    @keyframes glitchTop {
      0%,50%,100%{transform: translate(0);}
      10%{transform: translate(-2px,-2px);}
      20%{transform: translate(2px,2px);}
      30%{transform: translate(-1px,1px);}
      40%{transform: translate(1px,-1px);}
    }
    @keyframes glitchBottom {
      0%,50%,100%{transform: translate(0);}
      10%{transform: translate(1px,1px);}
      20%{transform: translate(-2px,-1px);}
      30%{transform: translate(2px,0);}
      40%{transform: translate(-1px,1px);}
    }

    /* Mission Briefing */
    .mission-briefing {
      font-family: 'Fira Code', monospace;
      font-size: 1.1rem;
      line-height: 1.7;
      color: #e6e0d6;
      text-shadow: 0 0 2px rgba(255,240,220,0.2);
      margin-top: 1.5rem;
      white-space: pre-wrap;
      letter-spacing: 0.5px;
      animation: briefingFlicker 2s infinite;
    }
    @keyframes briefingFlicker {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.95; }
    }

    .cursor {
      display: inline-block;
      margin-left: 2px;
      color: #d4b78c;
      text-shadow: 0 0 2px #fff5e6;
      animation: blink 1s steps(2, start) infinite;
    }
    @keyframes blink { to { visibility: hidden; } }

    /* Modules Grid */
    .modules-grid {
      margin-top: 3rem;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
      gap: 1.5rem;
      width: 100%;
      max-width: 1000px;
      position: relative;
    }
    .modules-grid::before {
      content: "";
      position: absolute;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(0deg, rgba(212,183,140,0.05) 1px, transparent 1px);
      background-size: 100% 20px;
      animation: scan 3s linear infinite;
      pointer-events: none;
      z-index: 5;
    }
    @keyframes scan {
      0% { background-position: 0 0; }
      100% { background-position: 0 20px; }
    }

    .module-card {
      background: rgba(17,17,17,0.85);
      border-radius: 6px;
      padding: 1rem;
      text-align: left;
      position: relative;
      overflow: hidden;
      box-shadow: 0 0 15px rgba(212,183,140,0.2);
      border: 2px solid #222;
      transition: transform 0.3s, box-shadow 0.3s, border-color 0.3s;
      animation: flicker 2s infinite;
      z-index: 10;
    }
    .module-card::before {
      content: "";
      position: absolute;
      top: 10%;
      left: 5%;
      width: 90%;
      height: 80%;
      border: 1px dashed rgba(212,183,140,0.1);
      pointer-events: none;
    }
    .module-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 0 25px #d4b78c;
      border-color: #d4b78c;
    }
    .module-card h3 {
      margin-top: 0;
      color: #d4b78c;
    }
    .module-card p {
      color: #ccc;
      font-size: 0.95rem;
    }
    .launch-link {
      display: inline-block;
      margin-top: 0.8rem;
      padding: 5px 10px;
      border: 1px solid #d4b78c;
      border-radius: 4px;
      font-size: 0.9rem;
      color: #d4b78c;
      text-decoration: none;
      transition: background 0.2s, border-color 0.2s, color 0.2s;
    }
    .launch-link:hover {
      background: #d4b78c;
      border-color: #d4b78c;
      color: #111;
    }

    @keyframes flicker {
      0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% { opacity: 1; }
      20%, 24%, 55% { opacity: 0.85; }
    }

    .activity-dot {
      position: absolute;
      width: 4px;
      height: 4px;
      background: #d4b78c;
      border-radius: 50%;
      opacity: 0.7;
      animation: blink 1.5s infinite;
    }

    /* Loading Screen */
    #loading-screen {
      position: fixed;
      top:0; left:0;
      width:100%; height:100%;
      background:#0b0b0b;
      color:#d4b78c;
      font-family:'Fira Code', monospace;
      display:flex;
      justify-content:center;
      align-items:center;
      flex-direction:column;
      white-space:pre-wrap;
      z-index:1000;
    }
  </style>
</head>
<body>
  <!-- Loading Screen -->
  <div id="loading-screen">
    <pre id="terminal-output"></pre>
  </div>

  <div class="container" style="visibility:hidden;">
    <h1 class="glitch" data-text="H4ckronin">H4ckronin</h1>
    <pre class="mission-briefing" id="mission-briefing"></pre>

    <div class="modules-grid">
      <div class="module-card">
        <h3>Havoc Module</h3>
        <p>Deep dive into advanced red teaming strategies and simulated attacks.</p>
        <a href="/blog/havoc-module" class="launch-link">Launch</a>
        <span class="activity-dot" style="top:10%; left:15%; animation-delay:0s;"></span>
        <span class="activity-dot" style="top:40%; left:70%; animation-delay:0.3s;"></span>
        <span class="activity-dot" style="top:75%; left:30%; animation-delay:0.6s;"></span>
      </div>
      <div class="module-card">
        <h3>Mythic-Lite</h3>
        <p>Learn the lighter, portable exploits inspired by C2 frameworks.</p>
        <a href="/blog/mythic-lite" class="launch-link">Launch</a>
        <span class="activity-dot" style="top:20%; left:25%; animation-delay:0.1s;"></span>
        <span class="activity-dot" style="top:60%; left:60%; animation-delay:0.4s;"></span>
        <span class="activity-dot" style="top:80%; left:40%; animation-delay:0.7s;"></span>
      </div>
      <div class="module-card">
        <h3>Sliver Armoury</h3>
        <p>Explore operational modules like a full-stack offensive toolkit.</p>
        <a href="/blog/sliver-armoury" class="launch-link">Launch</a>
        <span class="activity-dot" style="top:15%; left:35%; animation-delay:0.2s;"></span>
        <span class="activity-dot" style="top:50%; left:50%; animation-delay:0.5s;"></span>
        <span class="activity-dot" style="top:85%; left:20%; animation-delay:0.8s;"></span>
      </div>
    </div>
  </div>

  <script type="module">
    const terminalOutput = document.getElementById("terminal-output");
    const container = document.querySelector(".container");

    const lines = [
      "[SYSTEM] Initializing H4ckronin blog…",
      "[ACCESS GRANTED] Welcome Operator"
    ];

    const highlightMap = {
      "[SYSTEM]":"#7fdfff",
      "[STATUS]":"#7fdfff",
      "[INFO]":"#7fdfff",
      "[ACCESS GRANTED]":"#00FF41"
    };

    function sleep(ms){return new Promise(r=>setTimeout(r,ms));}

    async function typeLine(line, delay=35){
      for(let i=0;i<line.length;i++){
        terminalOutput.innerHTML += line[i];
        await sleep(delay);
      }
      for(const key in highlightMap){
        terminalOutput.innerHTML = terminalOutput.innerHTML.replace(
          key, `<span style="color:${highlightMap[key]}">${key}</span>`
        );
      }
      terminalOutput.innerHTML += "\n";
    }

    async function runTerminal(){
      for(let line of lines){
        await typeLine(line);
        await sleep(120);
      }
      const cursor = document.createElement("span");
      cursor.className="cursor";
      cursor.textContent="█";
      terminalOutput.appendChild(cursor);

      await sleep(800);
      document.getElementById("loading-screen").style.transition="opacity 0.8s";
      document.getElementById("loading-screen").style.opacity="0";
      setTimeout(()=>{
        document.getElementById("loading-screen").style.display="none";
        container.style.visibility="visible";
      },800);
    }

    runTerminal();
  </script>
</body>
</html>
